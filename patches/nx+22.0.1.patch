diff --git a/node_modules/nx/release/changelog-renderer/index.js b/node_modules/nx/release/changelog-renderer/index.js
index d349e5f..f16eee6 100644
--- a/node_modules/nx/release/changelog-renderer/index.js
+++ b/node_modules/nx/release/changelog-renderer/index.js
@@ -45,13 +45,13 @@ class DefaultChangelogRenderer {
             return this.renderEmptyEntry();
         }
         sections.push([this.renderVersionTitle()]);
+        if (this.hasBreakingChanges()) {
+            sections.push(this.renderBreakingChanges());
+        }
         const changesByType = this.renderChangesByType();
         if (changesByType.length > 0) {
             sections.push(changesByType);
         }
-        if (this.hasBreakingChanges()) {
-            sections.push(this.renderBreakingChanges());
-        }
         if (this.hasDependencyBumps()) {
             sections.push(this.renderDependencyBumps());
         }
@@ -189,9 +189,11 @@ class DefaultChangelogRenderer {
         return this.dependencyBumps && this.dependencyBumps.length > 0;
     }
     renderDependencyBumps() {
-        const markdownLines = ['', '### üß± Updated Dependencies', ''];
+        // const markdownLines = ['', '### üß± Updated Dependencies', ''];
+        const markdownLines = ['', '### üå± Dependencies', ''];
         this.dependencyBumps.forEach(({ dependencyName, newVersion }) => {
-            markdownLines.push(`- Updated ${dependencyName} to ${newVersion}`);
+            // markdownLines.push(`- Updated ${dependencyName} to ${newVersion}`);
+            markdownLines.push(`- **${dependencyName}**: upgraded to \`v${newVersion}\``);
         });
         return markdownLines;
     }
@@ -258,7 +260,8 @@ class DefaultChangelogRenderer {
                 .join('\n');
         }
         let changeLine = '- ' +
-            (!this.isVersionPlans && change.isBreaking ? '‚ö†Ô∏è  ' : '') +
+            // (!this.isVersionPlans && change.isBreaking ? '‚ö†Ô∏è  ' : '') +
+            (!this.isVersionPlans && change.isBreaking ? '‚ö†Ô∏è ' : '') +
             (!this.isVersionPlans && change.scope
                 ? `**${change.scope.trim()}:** `
                 : '') +
diff --git a/node_modules/nx/src/command-line/release/utils/git.js b/node_modules/nx/src/command-line/release/utils/git.js
index fbb58b6..64d8fa1 100644
--- a/node_modules/nx/src/command-line/release/utils/git.js
+++ b/node_modules/nx/src/command-line/release/utils/git.js
@@ -475,7 +475,8 @@ function getAllAuthorsForCommit(commit) {
 }
 // https://www.conventionalcommits.org/en/v1.0.0/
 // https://regex101.com/r/FSfNvA/1
-const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+// const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.*)\))?(?<breaking>!)?: (?<description>.+)/i;
 const CoAuthoredByRegex = /co-authored-by:\s*(?<name>.+)(<(?<email>.+)>)/gim;
 // GitHub style PR references
 const PullRequestRE = /\([ a-z]*(#\d+)\s*\)/gm;
diff --git a/node_modules/nx/src/command-line/release/utils/remote-release-clients/github.js b/node_modules/nx/src/command-line/release/utils/remote-release-clients/github.js
index f58fa46..680fab7 100644
--- a/node_modules/nx/src/command-line/release/utils/remote-release-clients/github.js
+++ b/node_modules/nx/src/command-line/release/utils/remote-release-clients/github.js
@@ -115,11 +115,18 @@ class GithubRemoteReleaseClient extends remote_release_client_1.RemoteReleaseCli
                         break;
                     }
                 }
-                const { data } = await axios
+                const emailQuery = await axios
                     .get(`https://ungh.cc/users/find/${email}`)
                     .catch(() => ({ data: { user: null } }));
-                if (data?.user) {
-                    meta.username = data.user.username;
+                if (emailQuery.data?.user) {
+                    meta.username = emailQuery.data.user.username;
+                    break;
+                }
+                const authorQuery = await axios
+                    .get(`https://ungh.cc/users/find/${authorName}`)
+                    .catch(() => ({ data: { user: null } }));
+                if (authorQuery.data?.user) {
+                    meta.username = authorQuery.data.user.username;
                     break;
                 }
             }
diff --git a/node_modules/nx/src/generators/utils/json.js b/node_modules/nx/src/generators/utils/json.js
index a59bc2c..a8387f4 100644
--- a/node_modules/nx/src/generators/utils/json.js
+++ b/node_modules/nx/src/generators/utils/json.js
@@ -3,6 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.readJson = readJson;
 exports.writeJson = writeJson;
 exports.updateJson = updateJson;
+let detectIndent_1;
+(async () => detectIndent_1 = ((await import('detect-indent')).default))();
 const json_1 = require("../../utils/json");
 /**
  * Reads a json file, removes all comments and parses JSON.
@@ -31,7 +33,9 @@ function readJson(tree, path, options) {
  * @param options Optional JSON Serialize Options
  */
 function writeJson(tree, path, value, options) {
-    const serialized = (0, json_1.serializeJson)(value, options);
+    // const serialized = (0, json_1.serializeJson)(value, options);
+    const indent = options?.indent ?? detectIndent_1(tree.read(path, 'utf-8')).indent;
+    const serialized = (0, json_1.serializeJson)(value, { ...options, indent });
     tree.write(path, `${serialized}\n`);
 }
 /**
diff --git a/node_modules/nx/src/utils/json.js b/node_modules/nx/src/utils/json.js
index 2ace40e..c415390 100644
--- a/node_modules/nx/src/utils/json.js
+++ b/node_modules/nx/src/utils/json.js
@@ -58,5 +58,6 @@ function formatParseError(input, parseError) {
  * @returns the formatted JSON representation of the object
  */
 function serializeJson(input, options) {
-    return JSON.stringify(input, null, options?.spaces ?? 2);
+    // return JSON.stringify(input, null, options?.spaces ?? 2);
+    return JSON.stringify(input, null, options?.indent ?? 2);
 }
