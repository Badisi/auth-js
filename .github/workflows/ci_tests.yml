name: Run tests

on:
    push:
        branches:
            - '**'
            - '!main' # ignore on main because 'Deploy demo-app' will trigger it
        tags-ignore:
            - '**'
        paths-ignore:
            - 'apps/website/**'
    pull_request:
    workflow_call:
    workflow_dispatch:

env:
    HUSKY: 0

concurrency:
    group: run-tests-group-${{ github.ref }}
    cancel-in-progress: true

jobs:
    ci_tests:
        name: Tests on ${{ matrix.os }} node${{ matrix.node }}
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                node: [18, 20]

        steps:
            - name: Checkout sources
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  registry-url: https://registry.npmjs.org/
                  cache: npm

            # https://github.com/actions/setup-node/issues/411
            # https://github.com/npm/cli/issues/4341
            - name: Workaround for npm installation on Windows
              if: ${{ matrix.os == 'windows-latest' }}
              run: npm install -g npm@8.3.1

            - name: Install latest npm
              run: npm install -g npm@latest

            - name: Cache .angular and node_modules
              uses: actions/cache@v4
              id: cache-step
              with:
                  key: cache-${{ matrix.os }}-node${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      cache-${{ matrix.os }}-node${{ matrix.node }}-
                  path: |
                      .angular/cache
                      node_modules

            # https://github.com/npm/cli/issues/3079 (use --maxsockets=1)
            - name: Install dependencies (with workaround for Windows)
              if: ${{ steps.cache-step.outputs.cache-hit != 'true' && matrix.os == 'windows-latest' }}
              run: npm clean-install --engine-strict --maxsockets=1

            - name: Install dependencies
              if: ${{ steps.cache-step.outputs.cache-hit != 'true' && matrix.os != 'windows-latest' }}
              run: npm clean-install --engine-strict

            - name: Reset nx cache
              run: npx nx reset

            #   - name: Lint
            #     run: npm run lint

            - name: Test
              run: npm run test

            - name: Build auth-js
              working-directory: libs/auth-js
              run: npm run build

            - name: Build ngx-auth
              working-directory: libs/ngx-auth
              run: npm run build

            - name: Build auth-vue
              working-directory: libs/auth-vue
              run: npm run build
